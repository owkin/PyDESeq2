[build-system]
build-backend = "hatchling.build"
requires = [ "hatchling" ]

[project]
name = "pydeseq2"
version = "0.5.3"
description = "A python implementation of DESeq2."
readme = "README.md"
license = { file = "LICENSE" }
maintainers = [
  { name = "Boris Muzellec", email = "boris.muzellec@owkin.com" },
]
authors = [
  { name = "Boris Muzellec" },
  { name = "Maria Telenczuk" },
  { name = "Vincent Cabelli" },
  { name = "Mathieu Andreux" },
]
requires-python = ">=3.11"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "anndata>=0.11.0",
  "formulaic>=1.0.2",
  "numpy>=2.0.0",
  "pandas>=2.2.0",
  "scikit-learn>=1.4.0",
  "scipy>=1.12.0",
  "formulaic-contrasts>=0.2.0",
  "matplotlib>=3.9.0",
]
optional-dependencies.dev = [
  "pytest>=8.4.0",
  "pre-commit>=2.16.0",
  "numpydoc",
  "coverage",
  "mypy==1.18.2",
  "pandas-stubs",
  "ruff==0.14.0",
  "scipy-stubs",
]
optional-dependencies.doc = [
  "jupyter",
  "sphinx>=8.0.0",
  "sphinx_rtd_theme",
  "sphinx-autobuild",
  "texttable",
  "myst-parser",
  "docutils",
  "sphinx_click",
  "sphinx_gallery",
  "sphinx_autodoc_typehints",
  "sphinxcontrib-bibtex",
  "ipython",
  "gitpython>=3.1.42",
  "sphinxcontrib-googleanalytics>=0.5",
]
urls.Documentation = "https://pydeseq2.readthedocs.io/"
urls.Homepage = "https://github.com/owkin/PyDESeq2"
urls.Source = "https://github.com/owkin/PyDESeq2"

[tool.ruff]
line-length = 89

[tool.ruff.lint]
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    "D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # We donâ€™t want a blank line before a class docstring
    "D203",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"docs/*" = ["I"]
"tests/*" = ["D"]
# Ignore errors linked to sphinx gallery syntax
"examples/*" = ["D205", "B018", "D400"]
# Ignore unused imports in __init__.py files
"*/__init__.py" = ["F401"]

# pyproject.toml
[tool.pytest.ini_options]
filterwarnings = [
    "error",
    '''ignore:\s*Pyarrow will become a required dependency of pandas:DeprecationWarning''',
    # ignore Pyarrow deprecation warnings
    '''ignore:\s*A value is trying to be set on a copy of a DataFrame:FutureWarning''',
    '''ignore:\s*Setting an item of incompatible dtype:FutureWarning''',
]
